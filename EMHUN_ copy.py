{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# EMHUN Algorithm Implementation\n",
    "The implementation of the EMHUN algorithm to mine high-utility itemsets from data with unstable profits."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Database from Table 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "databaseTable3 = [\n",
    "    {\n",
    "        'tid': 1,\n",
    "        'items': ['a', 'b', 'd', 'e', 'f', 'g'], \n",
    "        'quantities': [2, 2, 1, 3, 2, 1], \n",
    "        'profits': [-2, 1, 4, 1, -1, -2]},\n",
    "    {\n",
    "        'tid': 2, \n",
    "        'items': ['b', 'c'], \n",
    "        'quantities': [1, 5], \n",
    "        'profits': [-1, 1]},\n",
    "    {\n",
    "        'tid': 3, \n",
    "        'items': ['b', 'c', 'd', 'e', 'f'], \n",
    "        'quantities': [2, 1, 3, 2, 1], \n",
    "        'profits': [-1, 1, 4, 1, -1]},\n",
    "    {\n",
    "        'tid': 4, \n",
    "        'items': ['c', 'd', 'e'],\n",
    "        'quantities': [2, 1, 3], \n",
    "        'profits': [1, 4, 1]},\n",
    "    {\n",
    "        'tid': 5, \n",
    "        'items': ['a', 'f'], \n",
    "        'quantities': [2, 3], \n",
    "        'profits': [2, -1]},\n",
    "    {\n",
    "        'tid': 6, \n",
    "        'items': ['a', 'b', 'c', 'd', 'e', 'f', 'g'], \n",
    "        'quantities': [2, 1, 4, 2, 1, 3, 1], \n",
    "        'profits': [1, 1, 1, 4, 1, -1, -2]},\n",
    "    {\n",
    "        'tid': 7, \n",
    "        'items': ['b', 'c', 'e'], \n",
    "        'quantities': [3, 2, 2], \n",
    "        'profits': [1, 2, 2]}\n",
    "]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Show variables in Table 3"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Min Utility variable and X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "minU = 0\n",
    "K = 10\n",
    "top_k_pattern = []\n",
    "X = []"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in databaseTable3:\n",
    "    for quantity, profit in zip(i[\"quantities\"], i[\"profits\"]):\n",
    "        minU += quantity*profit if quantity*profit < 0 else 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[]\n",
      "-20\n"
     ]
    }
   ],
   "source": [
    "print(top_k_pattern)\n",
    "print(minU)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Classify items\n",
    "This function classifies items into positive, negative, and hybrid based on their profits."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "def classify_items(database):\n",
    "    positive_items = set()\n",
    "    negative_items = set()\n",
    "    hybrid_items = set()\n",
    "    \n",
    "    for transaction in database:\n",
    "        for item, profit in zip(transaction['items'], transaction['profits']):\n",
    "            if profit > 0:\n",
    "                positive_items.add(item)\n",
    "            elif profit < 0:\n",
    "                negative_items.add(item)\n",
    "    \n",
    "    hybrid_items = positive_items.intersection(negative_items)\n",
    "    positive_items -= hybrid_items\n",
    "    negative_items -= hybrid_items\n",
    "    \n",
    "    return list(positive_items), list(negative_items), list(hybrid_items)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Output:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Positive Items (ρ): ['e', 'c', 'd']\n",
      "Hybrid Items (δ): ['a', 'b']\n",
      "Negative Items (η): ['f', 'g']\n"
     ]
    }
   ],
   "source": [
    "positive_items, negative_items, hybrid_items = classify_items(databaseTable3)\n",
    "print(\"Positive Items (ρ):\", positive_items)\n",
    "print(\"Hybrid Items (δ):\", hybrid_items)\n",
    "print(\"Negative Items (η):\", negative_items)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Calulate RTWU"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "def calculate_RTU(transaction):\n",
    "    RTU = 0\n",
    "    for profit, quantity in zip(transaction['profits'], transaction['quantities']):\n",
    "        if profit > 0:\n",
    "            RTU += profit * quantity\n",
    "    return RTU\n",
    "\n",
    "# RTWU without negative items\n",
    "def calculate_RTWU(database, positive_items, hybrid_items):\n",
    "    RTWU = {}\n",
    "    \n",
    "    for transaction in database:\n",
    "        RTU = calculate_RTU(transaction)\n",
    "        for item in transaction['items']:\n",
    "            if item in positive_items or item in hybrid_items :\n",
    "                if item not in RTWU:\n",
    "                    RTWU[item] = 0\n",
    "                RTWU[item] += RTU\n",
    "    \n",
    "    return RTWU\n",
    "# RTWU including negative items\n",
    "def calculate_RTWU_all_items(database, positive_items, hybrid_items, negative_items):\n",
    "    RTWU = {}\n",
    "    for transaction in database:\n",
    "        RTU = calculate_RTU(transaction)\n",
    "        for item in transaction['items']:\n",
    "            #if item in positive_items or item in hybrid_items or item in negative_items:\n",
    "            if item not in RTWU:\n",
    "                RTWU[item] = 0\n",
    "            RTWU[item] += RTU\n",
    "    \n",
    "    return RTWU"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Input:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "RTWU = calculate_RTWU(databaseTable3, positive_items, hybrid_items)\n",
    "RTWU_all_items = calculate_RTWU_all_items(databaseTable3, positive_items, hybrid_items, negative_items)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Output:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "RTWU:\n",
      "Item a: 29\n",
      "Item b: 56\n",
      "Item d: 49\n",
      "Item e: 60\n",
      "Item c: 56\n",
      "\n",
      "RTWU including negative items:\n",
      "Item a: 29\n",
      "Item b: 56\n",
      "Item d: 49\n",
      "Item e: 60\n",
      "Item f: 44\n",
      "Item g: 25\n",
      "Item c: 56\n"
     ]
    }
   ],
   "source": [
    "print(\"\\nRTWU:\")\n",
    "for item, value in RTWU.items():\n",
    "    print(f\"Item {item}: {value}\")\n",
    "print(\"\\nRTWU including negative items:\")\n",
    "for item, value in RTWU_all_items.items():\n",
    "    print(f\"Item {item}: {value}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Find Secondary(X)\n",
    "Using RTWU values base on Step 5,6 ( Page 8)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "def find_Secondary(RTWU, minU):\n",
    "    Secondary = []\n",
    "    for item, value in RTWU.items():\n",
    "        if value >= minU:\n",
    "            Secondary.append(item)\n",
    "    return Secondary"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Input: RTWU list and MinU variable"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "Secondary = find_Secondary(RTWU, minU)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Output:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Secondary:  ['a', 'b', 'd', 'e', 'c']\n"
     ]
    }
   ],
   "source": [
    "print(\"\\nSecondary: \", Secondary)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Sort Secondary(X) ∪ η by definition 7;\n",
    "\n",
    "Sort items in Secondary(X) and Negative Items (η) based on their RTWU values."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "def sort_items_in_second_ni(Secondary, negative_items, RTWU):\n",
    "    positive_secondary = [item for item in Secondary if item in positive_items]\n",
    "    hybrid_secondary = [item for item in Secondary if item in hybrid_items]\n",
    "    negative_secondary = [item for item in Secondary if item in negative_items]\n",
    "    \n",
    "    negative_only = [item for item in negative_items if item not in Secondary]\n",
    "    \n",
    "    positive_secondary.sort(key=lambda x: RTWU.get(x, 0))\n",
    "    hybrid_secondary.sort(key=lambda x: RTWU.get(x, 0))\n",
    "    negative_secondary.sort(key=lambda x: RTWU.get(x, 0))\n",
    "    negative_only.sort(key=lambda x: RTWU.get(x, 0))\n",
    "    \n",
    "    sorted_secondary = positive_secondary + hybrid_secondary + negative_secondary\n",
    "    sorted_negative = negative_only\n",
    "    \n",
    "    return sorted_secondary, sorted_negative"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Output:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Sorted Secondary: ['d', 'c', 'e', 'a', 'b']\n",
      "Sorted Negative Items (η): ['g', 'f']\n"
     ]
    }
   ],
   "source": [
    "sorted_secondary, sorted_negative_items = sort_items_in_second_ni(Secondary, negative_items, RTWU_all_items)\n",
    "print(\"\\nSorted Secondary:\", sorted_secondary)\n",
    "print(\"Sorted Negative Items (η):\", sorted_negative_items)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Prune transactions based on Secondary(X) and Negative items (η)\n",
    "\n",
    "Remove items not in Secondary(X) or Negative Items to reduce the database size."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "def prune_transactions(database, sorted_secondary, sorted_negative_items):\n",
    "    pruned_database = []\n",
    "    \n",
    "    for transaction in database:\n",
    "        pruned_items = []\n",
    "        pruned_quantities = []\n",
    "        pruned_profits = []\n",
    "        \n",
    "        for item, quantity, profit in zip(transaction['items'], transaction['quantities'], transaction['profits']):\n",
    "            if item in sorted_secondary or item in sorted_negative_items:\n",
    "                pruned_items.append(item)\n",
    "                pruned_quantities.append(quantity)\n",
    "                pruned_profits.append(profit)\n",
    "        \n",
    "        if pruned_items:\n",
    "            pruned_transaction = {\n",
    "                'tid': transaction['tid'],\n",
    "                'items': pruned_items,\n",
    "                'quantities': pruned_quantities,\n",
    "                'profits': pruned_profits\n",
    "            }\n",
    "            pruned_database.append(pruned_transaction)\n",
    "    \n",
    "    return pruned_database"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Database after pruned:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "After pruned transactions:\n",
      "{'tid': 1, 'items': ['a', 'b', 'd', 'e', 'f', 'g'], 'quantities': [2, 2, 1, 3, 2, 1], 'profits': [-2, 1, 4, 1, -1, -2]}\n",
      "{'tid': 2, 'items': ['b', 'c'], 'quantities': [1, 5], 'profits': [-1, 1]}\n",
      "{'tid': 3, 'items': ['b', 'c', 'd', 'e', 'f'], 'quantities': [2, 1, 3, 2, 1], 'profits': [-1, 1, 4, 1, -1]}\n",
      "{'tid': 4, 'items': ['c', 'd', 'e'], 'quantities': [2, 1, 3], 'profits': [1, 4, 1]}\n",
      "{'tid': 5, 'items': ['a', 'f'], 'quantities': [2, 3], 'profits': [2, -1]}\n",
      "{'tid': 6, 'items': ['a', 'b', 'c', 'd', 'e', 'f', 'g'], 'quantities': [2, 1, 4, 2, 1, 3, 1], 'profits': [1, 1, 1, 4, 1, -1, -2]}\n",
      "{'tid': 7, 'items': ['b', 'c', 'e'], 'quantities': [3, 2, 2], 'profits': [1, 2, 2]}\n"
     ]
    }
   ],
   "source": [
    "pruned_database = prune_transactions(databaseTable3, sorted_secondary, sorted_negative_items)\n",
    "print(\"\\nAfter pruned transactions:\")\n",
    "for transaction in pruned_database:\n",
    "    print(transaction)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Sorting stage"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Sort the items in the remaining transactions in the order of items with positive utility only, items with both negative and positive utility, items with negative utility only;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "def sort_items_in_transactions(pruned_database, sorted_secondary, sorted_negative_items):\n",
    "    sorted_database = []\n",
    "    combined_order = sorted_secondary + sorted_negative_items \n",
    "    \n",
    "    for transaction in pruned_database:\n",
    "        sorted_items = sorted(\n",
    "            transaction['items'],\n",
    "            key=lambda x: combined_order.index(x) if x in combined_order else float('inf')\n",
    "        )\n",
    "        \n",
    "        sorted_quantities = [quantity for _, quantity in sorted(zip(transaction['items'], transaction['quantities']), key=lambda x: combined_order.index(x[0]))]\n",
    "        sorted_profits = [profit for _, profit in sorted(zip(transaction['items'], transaction['profits']), key=lambda x: combined_order.index(x[0]))]\n",
    "        \n",
    "        sorted_transaction = {\n",
    "            'tid': transaction['tid'],\n",
    "            'items': sorted_items,\n",
    "            'quantities': sorted_quantities,\n",
    "            'profits': sorted_profits\n",
    "        }\n",
    "        sorted_database.append(sorted_transaction)\n",
    "    \n",
    "    return sorted_database"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Output:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Sorted Items in Transactions (Step 9):\n",
      "{'tid': 1, 'items': ['d', 'e', 'a', 'b', 'g', 'f'], 'quantities': [1, 3, 2, 2, 1, 2], 'profits': [4, 1, -2, 1, -2, -1]}\n",
      "{'tid': 2, 'items': ['c', 'b'], 'quantities': [5, 1], 'profits': [1, -1]}\n",
      "{'tid': 3, 'items': ['d', 'c', 'e', 'b', 'f'], 'quantities': [3, 1, 2, 2, 1], 'profits': [4, 1, 1, -1, -1]}\n",
      "{'tid': 4, 'items': ['d', 'c', 'e'], 'quantities': [1, 2, 3], 'profits': [4, 1, 1]}\n",
      "{'tid': 5, 'items': ['a', 'f'], 'quantities': [2, 3], 'profits': [2, -1]}\n",
      "{'tid': 6, 'items': ['d', 'c', 'e', 'a', 'b', 'g', 'f'], 'quantities': [2, 4, 1, 2, 1, 1, 3], 'profits': [4, 1, 1, 1, 1, -2, -1]}\n",
      "{'tid': 7, 'items': ['c', 'e', 'b'], 'quantities': [2, 2, 3], 'profits': [2, 2, 1]}\n"
     ]
    }
   ],
   "source": [
    "sorted_pruned_database = sort_items_in_transactions(pruned_database, sorted_secondary, sorted_negative_items)\n",
    "print(\"\\nSorted Items in Transactions (Step 9):\")\n",
    "for transaction in sorted_pruned_database:\n",
    "    print(transaction)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Sort transactions based on Definition 13"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "def sort_based_on_Def13(sorted_pruned_database, sorted_secondary, sorted_negative_items):\n",
    "    combined_order = sorted_secondary + sorted_negative_items\n",
    "\n",
    "    def transaction_sort_key(transaction):\n",
    "        items_order = [-combined_order.index(item) for item in transaction['items']]\n",
    "        return items_order[::-1], len(transaction['items']), transaction['tid']\n",
    "\n",
    "    sorted_database = sorted(\n",
    "        sorted_pruned_database,\n",
    "        key=transaction_sort_key\n",
    "    )\n",
    "    return sorted_database"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Output:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Final Sorted Transactions (Step 10):\n",
      "{'tid': 6, 'items': ['d', 'c', 'e', 'a', 'b', 'g', 'f'], 'quantities': [2, 4, 1, 2, 1, 1, 3], 'profits': [4, 1, 1, 1, 1, -2, -1]}\n",
      "{'tid': 1, 'items': ['d', 'e', 'a', 'b', 'g', 'f'], 'quantities': [1, 3, 2, 2, 1, 2], 'profits': [4, 1, -2, 1, -2, -1]}\n",
      "{'tid': 3, 'items': ['d', 'c', 'e', 'b', 'f'], 'quantities': [3, 1, 2, 2, 1], 'profits': [4, 1, 1, -1, -1]}\n",
      "{'tid': 5, 'items': ['a', 'f'], 'quantities': [2, 3], 'profits': [2, -1]}\n",
      "{'tid': 7, 'items': ['c', 'e', 'b'], 'quantities': [2, 2, 3], 'profits': [2, 2, 1]}\n",
      "{'tid': 2, 'items': ['c', 'b'], 'quantities': [5, 1], 'profits': [1, -1]}\n",
      "{'tid': 4, 'items': ['d', 'c', 'e'], 'quantities': [1, 2, 3], 'profits': [4, 1, 1]}\n"
     ]
    }
   ],
   "source": [
    "final_sorted_database = sort_based_on_Def13(sorted_pruned_database, sorted_secondary, sorted_negative_items)\n",
    "print(\"\\nFinal Sorted Transactions (Step 10):\")\n",
    "for transaction in final_sorted_database:\n",
    "    print(transaction)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Scan D to compute RSU(X,i), ∀i ∈ Secondary(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "def calculate_RSU(database, itemset):\n",
    "    RSU = {item: 0 for item in itemset}\n",
    "\n",
    "    for transaction in database:\n",
    "        items = transaction['items']\n",
    "        profits = transaction['profits']\n",
    "        quantities = transaction.get('quantities', [1] * len(items))\n",
    "        \n",
    "        for index, item in enumerate(items):\n",
    "            if item in itemset:\n",
    "                # utility of item X\n",
    "                u_item = profits[index] * quantities[index]\n",
    "                \n",
    "                # remaining relevant utility (rru)\n",
    "                rru = sum(\n",
    "                    profits[i] * quantities[i]\n",
    "                    for i in range(index + 1, len(items))\n",
    "                    if profits[i] > 0\n",
    "                )\n",
    "\n",
    "                RSU[item] += u_item + rru\n",
    "                RSU[item] += transaction.get(\"u_project\", 00)\n",
    "        \n",
    "    return RSU\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Output:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RSU Values: {'d': 49, 'c': 32, 'e': 21, 'a': 5, 'b': 3}\n"
     ]
    }
   ],
   "source": [
    "RSU_values = calculate_RSU(final_sorted_database, sorted_secondary)\n",
    "print(\"RSU Values:\", RSU_values)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Primary(X) = {i|i ∈ Secondary(X) ∧ RSU(X, i) ≥ minU};"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "def determine_Primary(RSU, minU):\n",
    "    return [item for item, utility in RSU.items() if utility >= minU]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Output:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Primary(X): ['d', 'c', 'e', 'a', 'b']\n"
     ]
    }
   ],
   "source": [
    "Primary = determine_Primary(RSU_values, minU)\n",
    "print(\"Primary(X):\", Primary)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "**************search********************\n",
      "\n",
      "Processing item: d, Current Beta: ['d']\n",
      "***************projecting database***********\n",
      "itemset: ['d']\n",
      "database: [{'tid': 6, 'items': ['d', 'c', 'e', 'a', 'b', 'g', 'f'], 'quantities': [2, 4, 1, 2, 1, 1, 3], 'profits': [4, 1, 1, 1, 1, -2, -1]}, {'tid': 1, 'items': ['d', 'e', 'a', 'b', 'g', 'f'], 'quantities': [1, 3, 2, 2, 1, 2], 'profits': [4, 1, -2, 1, -2, -1]}, {'tid': 3, 'items': ['d', 'c', 'e', 'b', 'f'], 'quantities': [3, 1, 2, 2, 1], 'profits': [4, 1, 1, -1, -1]}, {'tid': 5, 'items': ['a', 'f'], 'quantities': [2, 3], 'profits': [2, -1]}, {'tid': 7, 'items': ['c', 'e', 'b'], 'quantities': [2, 2, 3], 'profits': [2, 2, 1]}, {'tid': 2, 'items': ['c', 'b'], 'quantities': [5, 1], 'profits': [1, -1]}, {'tid': 4, 'items': ['d', 'c', 'e'], 'quantities': [1, 2, 3], 'profits': [4, 1, 1]}]\n",
      "Utility of Beta: 28\n",
      "Projected Database: [{'tid': 6, 'items': ['c', 'e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, 1, -2, -1], 'quantities': [4, 1, 2, 1, 1, 3], 'u_project': 8}, {'tid': 1, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, -2, 1, -2, -1], 'quantities': [3, 2, 2, 1, 2], 'u_project': 4}, {'tid': 3, 'items': ['c', 'e', 'b', 'f'], 'profits': [1, 1, -1, -1], 'quantities': [1, 2, 2, 1], 'u_project': 12}, {'tid': 4, 'items': ['c', 'e'], 'profits': [1, 1], 'quantities': [2, 3], 'u_project': 4}]\n",
      "processing [(['d'], 28)]\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: g, Current Beta: ['d', 'g']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'g']\n",
      "database: [{'tid': 6, 'items': ['c', 'e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, 1, -2, -1], 'quantities': [4, 1, 2, 1, 1, 3], 'u_project': 8}, {'tid': 1, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, -2, 1, -2, -1], 'quantities': [3, 2, 2, 1, 2], 'u_project': 4}, {'tid': 3, 'items': ['c', 'e', 'b', 'f'], 'profits': [1, 1, -1, -1], 'quantities': [1, 2, 2, 1], 'u_project': 12}, {'tid': 4, 'items': ['c', 'e'], 'profits': [1, 1], 'quantities': [2, 3], 'u_project': 4}]\n",
      "Database from Search: [{'tid': 6, 'items': ['c', 'e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, 1, -2, -1], 'quantities': [4, 1, 2, 1, 1, 3], 'u_project': 8}, {'tid': 1, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, -2, 1, -2, -1], 'quantities': [3, 2, 2, 1, 2], 'u_project': 4}, {'tid': 3, 'items': ['c', 'e', 'b', 'f'], 'profits': [1, 1, -1, -1], 'quantities': [1, 2, 2, 1], 'u_project': 12}, {'tid': 4, 'items': ['c', 'e'], 'profits': [1, 1], 'quantities': [2, 3], 'u_project': 4}]\n",
      "Utility of Beta: 8\n",
      "Projected Database: [{'tid': 6, 'items': ['f'], 'profits': [-1], 'quantities': [3], 'u_project': 6}, {'tid': 1, 'items': ['f'], 'profits': [-1], 'quantities': [2], 'u_project': 2}]\n",
      "processing n [(['d'], 28), (['d', 'g'], 8)]\n",
      "RSU for Negative Items: {'f': 3}\n",
      "Filtered Negative Items: ['f']\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: f, Current Beta: ['d', 'g', 'f']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'g', 'f']\n",
      "database: [{'tid': 6, 'items': ['f'], 'profits': [-1], 'quantities': [3], 'u_project': 6}, {'tid': 1, 'items': ['f'], 'profits': [-1], 'quantities': [2], 'u_project': 2}]\n",
      "Database from Search: [{'tid': 6, 'items': ['f'], 'profits': [-1], 'quantities': [3], 'u_project': 6}, {'tid': 1, 'items': ['f'], 'profits': [-1], 'quantities': [2], 'u_project': 2}]\n",
      "Utility of Beta: 3\n",
      "Projected Database: []\n",
      "processing n [(['d'], 28), (['d', 'g'], 8), (['d', 'g', 'f'], 3)]\n",
      "RSU for Negative Items: {}\n",
      "Filtered Negative Items: []\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: f, Current Beta: ['d', 'f']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'f']\n",
      "database: [{'tid': 6, 'items': ['c', 'e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, 1, -2, -1], 'quantities': [4, 1, 2, 1, 1, 3], 'u_project': 8}, {'tid': 1, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, -2, 1, -2, -1], 'quantities': [3, 2, 2, 1, 2], 'u_project': 4}, {'tid': 3, 'items': ['c', 'e', 'b', 'f'], 'profits': [1, 1, -1, -1], 'quantities': [1, 2, 2, 1], 'u_project': 12}, {'tid': 4, 'items': ['c', 'e'], 'profits': [1, 1], 'quantities': [2, 3], 'u_project': 4}]\n",
      "Database from Search: [{'tid': 6, 'items': ['c', 'e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, 1, -2, -1], 'quantities': [4, 1, 2, 1, 1, 3], 'u_project': 8}, {'tid': 1, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, -2, 1, -2, -1], 'quantities': [3, 2, 2, 1, 2], 'u_project': 4}, {'tid': 3, 'items': ['c', 'e', 'b', 'f'], 'profits': [1, 1, -1, -1], 'quantities': [1, 2, 2, 1], 'u_project': 12}, {'tid': 4, 'items': ['c', 'e'], 'profits': [1, 1], 'quantities': [2, 3], 'u_project': 4}]\n",
      "Utility of Beta: 18\n",
      "Projected Database: []\n",
      "processing n [(['d'], 28), (['d', 'f'], 18), (['d', 'g'], 8), (['d', 'g', 'f'], 3)]\n",
      "RSU for Negative Items: {}\n",
      "Filtered Negative Items: []\n",
      "**************searchN********************\n",
      "out if\n",
      "projected_db: [{'tid': 6, 'items': ['c', 'e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, 1, -2, -1], 'quantities': [4, 1, 2, 1, 1, 3], 'u_project': 8}, {'tid': 1, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, -2, 1, -2, -1], 'quantities': [3, 2, 2, 1, 2], 'u_project': 4}, {'tid': 3, 'items': ['c', 'e', 'b', 'f'], 'profits': [1, 1, -1, -1], 'quantities': [1, 2, 2, 1], 'u_project': 12}, {'tid': 4, 'items': ['c', 'e'], 'profits': [1, 1], 'quantities': [2, 3], 'u_project': 4}]\n",
      "RSU: {'c': 40, 'e': 42, 'a': 13, 'b': 25}\n",
      "RLU: {'c': 40, 'e': 49, 'a': 25, 'b': 40}\n",
      "Primary(β): ['c', 'e', 'a', 'b']\n",
      "Secondary(β): ['c', 'e', 'a', 'b']\n",
      "**************search********************\n",
      "\n",
      "Processing item: c, Current Beta: ['d', 'c']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c']\n",
      "database: [{'tid': 6, 'items': ['c', 'e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, 1, -2, -1], 'quantities': [4, 1, 2, 1, 1, 3], 'u_project': 8}, {'tid': 1, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, -2, 1, -2, -1], 'quantities': [3, 2, 2, 1, 2], 'u_project': 4}, {'tid': 3, 'items': ['c', 'e', 'b', 'f'], 'profits': [1, 1, -1, -1], 'quantities': [1, 2, 2, 1], 'u_project': 12}, {'tid': 4, 'items': ['c', 'e'], 'profits': [1, 1], 'quantities': [2, 3], 'u_project': 4}]\n",
      "Utility of Beta: 31\n",
      "Projected Database: [{'tid': 6, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, -2, -1], 'quantities': [1, 2, 1, 1, 3], 'u_project': 12}, {'tid': 3, 'items': ['e', 'b', 'f'], 'profits': [1, -1, -1], 'quantities': [2, 2, 1], 'u_project': 13}, {'tid': 4, 'items': ['e'], 'profits': [1], 'quantities': [3], 'u_project': 6}]\n",
      "processing [(['d', 'c'], 31), (['d'], 28), (['d', 'f'], 18), (['d', 'g'], 8), (['d', 'g', 'f'], 3)]\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: g, Current Beta: ['d', 'c', 'g']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'g']\n",
      "database: [{'tid': 6, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, -2, -1], 'quantities': [1, 2, 1, 1, 3], 'u_project': 12}, {'tid': 3, 'items': ['e', 'b', 'f'], 'profits': [1, -1, -1], 'quantities': [2, 2, 1], 'u_project': 13}, {'tid': 4, 'items': ['e'], 'profits': [1], 'quantities': [3], 'u_project': 6}]\n",
      "Database from Search: [{'tid': 6, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, -2, -1], 'quantities': [1, 2, 1, 1, 3], 'u_project': 12}, {'tid': 3, 'items': ['e', 'b', 'f'], 'profits': [1, -1, -1], 'quantities': [2, 2, 1], 'u_project': 13}, {'tid': 4, 'items': ['e'], 'profits': [1], 'quantities': [3], 'u_project': 6}]\n",
      "Utility of Beta: 10\n",
      "Projected Database: [{'tid': 6, 'items': ['f'], 'profits': [-1], 'quantities': [3], 'u_project': 10}]\n",
      "processing n [(['d', 'c'], 31), (['d'], 28), (['d', 'f'], 18), (['d', 'c', 'g'], 10), (['d', 'g'], 8), (['d', 'g', 'f'], 3)]\n",
      "RSU for Negative Items: {'f': 7}\n",
      "Filtered Negative Items: ['f']\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: f, Current Beta: ['d', 'c', 'g', 'f']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'g', 'f']\n",
      "database: [{'tid': 6, 'items': ['f'], 'profits': [-1], 'quantities': [3], 'u_project': 10}]\n",
      "Database from Search: [{'tid': 6, 'items': ['f'], 'profits': [-1], 'quantities': [3], 'u_project': 10}]\n",
      "Utility of Beta: 7\n",
      "Projected Database: []\n",
      "processing n [(['d', 'c'], 31), (['d'], 28), (['d', 'f'], 18), (['d', 'c', 'g'], 10), (['d', 'g'], 8), (['d', 'c', 'g', 'f'], 7), (['d', 'g', 'f'], 3)]\n",
      "RSU for Negative Items: {}\n",
      "Filtered Negative Items: []\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: f, Current Beta: ['d', 'c', 'f']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'f']\n",
      "database: [{'tid': 6, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, -2, -1], 'quantities': [1, 2, 1, 1, 3], 'u_project': 12}, {'tid': 3, 'items': ['e', 'b', 'f'], 'profits': [1, -1, -1], 'quantities': [2, 2, 1], 'u_project': 13}, {'tid': 4, 'items': ['e'], 'profits': [1], 'quantities': [3], 'u_project': 6}]\n",
      "Database from Search: [{'tid': 6, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, -2, -1], 'quantities': [1, 2, 1, 1, 3], 'u_project': 12}, {'tid': 3, 'items': ['e', 'b', 'f'], 'profits': [1, -1, -1], 'quantities': [2, 2, 1], 'u_project': 13}, {'tid': 4, 'items': ['e'], 'profits': [1], 'quantities': [3], 'u_project': 6}]\n",
      "Utility of Beta: 21\n",
      "Projected Database: []\n",
      "processing n [(['d', 'c'], 31), (['d'], 28), (['d', 'c', 'f'], 21), (['d', 'f'], 18), (['d', 'c', 'g'], 10), (['d', 'g'], 8), (['d', 'c', 'g', 'f'], 7), (['d', 'g', 'f'], 3)]\n",
      "RSU for Negative Items: {}\n",
      "Filtered Negative Items: []\n",
      "**************searchN********************\n",
      "out if\n",
      "projected_db: [{'tid': 6, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, -2, -1], 'quantities': [1, 2, 1, 1, 3], 'u_project': 12}, {'tid': 3, 'items': ['e', 'b', 'f'], 'profits': [1, -1, -1], 'quantities': [2, 2, 1], 'u_project': 13}, {'tid': 4, 'items': ['e'], 'profits': [1], 'quantities': [3], 'u_project': 6}]\n",
      "RSU: {'e': 40, 'a': 15, 'b': 24}\n",
      "RLU: {'e': 40, 'a': 16, 'b': 31}\n",
      "Primary(β): ['e', 'a', 'b']\n",
      "Secondary(β): ['e', 'a', 'b']\n",
      "**************search********************\n",
      "\n",
      "Processing item: e, Current Beta: ['d', 'c', 'e']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'e']\n",
      "database: [{'tid': 6, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, -2, -1], 'quantities': [1, 2, 1, 1, 3], 'u_project': 12}, {'tid': 3, 'items': ['e', 'b', 'f'], 'profits': [1, -1, -1], 'quantities': [2, 2, 1], 'u_project': 13}, {'tid': 4, 'items': ['e'], 'profits': [1], 'quantities': [3], 'u_project': 6}]\n",
      "Utility of Beta: 37\n",
      "Projected Database: [{'tid': 6, 'items': ['a', 'b', 'g', 'f'], 'profits': [1, 1, -2, -1], 'quantities': [2, 1, 1, 3], 'u_project': 13}, {'tid': 3, 'items': ['b', 'f'], 'profits': [-1, -1], 'quantities': [2, 1], 'u_project': 15}]\n",
      "processing [(['d', 'c', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'f'], 21), (['d', 'f'], 18), (['d', 'c', 'g'], 10), (['d', 'g'], 8), (['d', 'c', 'g', 'f'], 7), (['d', 'g', 'f'], 3)]\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: g, Current Beta: ['d', 'c', 'e', 'g']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'e', 'g']\n",
      "database: [{'tid': 6, 'items': ['a', 'b', 'g', 'f'], 'profits': [1, 1, -2, -1], 'quantities': [2, 1, 1, 3], 'u_project': 13}, {'tid': 3, 'items': ['b', 'f'], 'profits': [-1, -1], 'quantities': [2, 1], 'u_project': 15}]\n",
      "Database from Search: [{'tid': 6, 'items': ['a', 'b', 'g', 'f'], 'profits': [1, 1, -2, -1], 'quantities': [2, 1, 1, 3], 'u_project': 13}, {'tid': 3, 'items': ['b', 'f'], 'profits': [-1, -1], 'quantities': [2, 1], 'u_project': 15}]\n",
      "Utility of Beta: 11\n",
      "Projected Database: [{'tid': 6, 'items': ['f'], 'profits': [-1], 'quantities': [3], 'u_project': 11}]\n",
      "processing n [(['d', 'c', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'f'], 21), (['d', 'f'], 18), (['d', 'c', 'e', 'g'], 11), (['d', 'c', 'g'], 10), (['d', 'g'], 8), (['d', 'c', 'g', 'f'], 7), (['d', 'g', 'f'], 3)]\n",
      "RSU for Negative Items: {'f': 8}\n",
      "Filtered Negative Items: ['f']\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: f, Current Beta: ['d', 'c', 'e', 'g', 'f']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'e', 'g', 'f']\n",
      "database: [{'tid': 6, 'items': ['f'], 'profits': [-1], 'quantities': [3], 'u_project': 11}]\n",
      "Database from Search: [{'tid': 6, 'items': ['f'], 'profits': [-1], 'quantities': [3], 'u_project': 11}]\n",
      "Utility of Beta: 8\n",
      "Projected Database: []\n",
      "processing n [(['d', 'c', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'f'], 21), (['d', 'f'], 18), (['d', 'c', 'e', 'g'], 11), (['d', 'c', 'g'], 10), (['d', 'g'], 8), (['d', 'c', 'e', 'g', 'f'], 8), (['d', 'c', 'g', 'f'], 7), (['d', 'g', 'f'], 3)]\n",
      "RSU for Negative Items: {}\n",
      "Filtered Negative Items: []\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: f, Current Beta: ['d', 'c', 'e', 'f']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'e', 'f']\n",
      "database: [{'tid': 6, 'items': ['a', 'b', 'g', 'f'], 'profits': [1, 1, -2, -1], 'quantities': [2, 1, 1, 3], 'u_project': 13}, {'tid': 3, 'items': ['b', 'f'], 'profits': [-1, -1], 'quantities': [2, 1], 'u_project': 15}]\n",
      "Database from Search: [{'tid': 6, 'items': ['a', 'b', 'g', 'f'], 'profits': [1, 1, -2, -1], 'quantities': [2, 1, 1, 3], 'u_project': 13}, {'tid': 3, 'items': ['b', 'f'], 'profits': [-1, -1], 'quantities': [2, 1], 'u_project': 15}]\n",
      "Utility of Beta: 24\n",
      "Projected Database: []\n",
      "processing n [(['d', 'c', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'f'], 21), (['d', 'f'], 18), (['d', 'c', 'e', 'g'], 11), (['d', 'c', 'g'], 10), (['d', 'g'], 8), (['d', 'c', 'e', 'g', 'f'], 8), (['d', 'c', 'g', 'f'], 7)]\n",
      "RSU for Negative Items: {}\n",
      "Filtered Negative Items: []\n",
      "**************searchN********************\n",
      "out if\n",
      "projected_db: [{'tid': 6, 'items': ['a', 'b', 'g', 'f'], 'profits': [1, 1, -2, -1], 'quantities': [2, 1, 1, 3], 'u_project': 13}, {'tid': 3, 'items': ['b', 'f'], 'profits': [-1, -1], 'quantities': [2, 1], 'u_project': 15}]\n",
      "RSU: {'a': 16, 'b': 27}\n",
      "RLU: {'a': 16, 'b': 31}\n",
      "Primary(β): ['a', 'b']\n",
      "Secondary(β): ['a', 'b']\n",
      "**************search********************\n",
      "\n",
      "Processing item: a, Current Beta: ['d', 'c', 'e', 'a']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'e', 'a']\n",
      "database: [{'tid': 6, 'items': ['a', 'b', 'g', 'f'], 'profits': [1, 1, -2, -1], 'quantities': [2, 1, 1, 3], 'u_project': 13}, {'tid': 3, 'items': ['b', 'f'], 'profits': [-1, -1], 'quantities': [2, 1], 'u_project': 15}]\n",
      "Utility of Beta: 15\n",
      "Projected Database: [{'tid': 6, 'items': ['b', 'g', 'f'], 'profits': [1, -2, -1], 'quantities': [1, 1, 3], 'u_project': 15}]\n",
      "processing [(['d', 'c', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'f'], 21), (['d', 'f'], 18), (['d', 'c', 'e', 'a'], 15), (['d', 'c', 'e', 'g'], 11), (['d', 'c', 'g'], 10), (['d', 'g'], 8), (['d', 'c', 'e', 'g', 'f'], 8)]\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: g, Current Beta: ['d', 'c', 'e', 'a', 'g']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'e', 'a', 'g']\n",
      "database: [{'tid': 6, 'items': ['b', 'g', 'f'], 'profits': [1, -2, -1], 'quantities': [1, 1, 3], 'u_project': 15}]\n",
      "Database from Search: [{'tid': 6, 'items': ['b', 'g', 'f'], 'profits': [1, -2, -1], 'quantities': [1, 1, 3], 'u_project': 15}]\n",
      "Utility of Beta: 13\n",
      "Projected Database: [{'tid': 6, 'items': ['f'], 'profits': [-1], 'quantities': [3], 'u_project': 13}]\n",
      "processing n [(['d', 'c', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'f'], 21), (['d', 'f'], 18), (['d', 'c', 'e', 'a'], 15), (['d', 'c', 'e', 'a', 'g'], 13), (['d', 'c', 'e', 'g'], 11), (['d', 'c', 'g'], 10), (['d', 'g'], 8)]\n",
      "RSU for Negative Items: {'f': 10}\n",
      "Filtered Negative Items: ['f']\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: f, Current Beta: ['d', 'c', 'e', 'a', 'g', 'f']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'e', 'a', 'g', 'f']\n",
      "database: [{'tid': 6, 'items': ['f'], 'profits': [-1], 'quantities': [3], 'u_project': 13}]\n",
      "Database from Search: [{'tid': 6, 'items': ['f'], 'profits': [-1], 'quantities': [3], 'u_project': 13}]\n",
      "Utility of Beta: 10\n",
      "Projected Database: []\n",
      "processing n [(['d', 'c', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'f'], 21), (['d', 'f'], 18), (['d', 'c', 'e', 'a'], 15), (['d', 'c', 'e', 'a', 'g'], 13), (['d', 'c', 'e', 'g'], 11), (['d', 'c', 'g'], 10), (['d', 'c', 'e', 'a', 'g', 'f'], 10)]\n",
      "RSU for Negative Items: {}\n",
      "Filtered Negative Items: []\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: f, Current Beta: ['d', 'c', 'e', 'a', 'f']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'e', 'a', 'f']\n",
      "database: [{'tid': 6, 'items': ['b', 'g', 'f'], 'profits': [1, -2, -1], 'quantities': [1, 1, 3], 'u_project': 15}]\n",
      "Database from Search: [{'tid': 6, 'items': ['b', 'g', 'f'], 'profits': [1, -2, -1], 'quantities': [1, 1, 3], 'u_project': 15}]\n",
      "Utility of Beta: 12\n",
      "Projected Database: []\n",
      "processing n [(['d', 'c', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'f'], 21), (['d', 'f'], 18), (['d', 'c', 'e', 'a'], 15), (['d', 'c', 'e', 'a', 'g'], 13), (['d', 'c', 'e', 'a', 'f'], 12), (['d', 'c', 'e', 'g'], 11), (['d', 'c', 'g'], 10)]\n",
      "RSU for Negative Items: {}\n",
      "Filtered Negative Items: []\n",
      "**************searchN********************\n",
      "out if\n",
      "projected_db: [{'tid': 6, 'items': ['b', 'g', 'f'], 'profits': [1, -2, -1], 'quantities': [1, 1, 3], 'u_project': 15}]\n",
      "RSU: {'b': 16}\n",
      "RLU: {'b': 16}\n",
      "Primary(β): ['b']\n",
      "Secondary(β): ['b']\n",
      "**************search********************\n",
      "\n",
      "Processing item: b, Current Beta: ['d', 'c', 'e', 'a', 'b']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'e', 'a', 'b']\n",
      "database: [{'tid': 6, 'items': ['b', 'g', 'f'], 'profits': [1, -2, -1], 'quantities': [1, 1, 3], 'u_project': 15}]\n",
      "Utility of Beta: 16\n",
      "Projected Database: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 16}]\n",
      "processing [(['d', 'c', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'f'], 21), (['d', 'f'], 18), (['d', 'c', 'e', 'a', 'b'], 16), (['d', 'c', 'e', 'a'], 15), (['d', 'c', 'e', 'a', 'g'], 13), (['d', 'c', 'e', 'a', 'f'], 12), (['d', 'c', 'e', 'g'], 11)]\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: g, Current Beta: ['d', 'c', 'e', 'a', 'b', 'g']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'e', 'a', 'b', 'g']\n",
      "database: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 16}]\n",
      "Database from Search: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 16}]\n",
      "Utility of Beta: 14\n",
      "Projected Database: [{'tid': 6, 'items': ['f'], 'profits': [-1], 'quantities': [3], 'u_project': 14}]\n",
      "processing n [(['d', 'c', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'f'], 21), (['d', 'f'], 18), (['d', 'c', 'e', 'a', 'b'], 16), (['d', 'c', 'e', 'a'], 15), (['d', 'c', 'e', 'a', 'b', 'g'], 14), (['d', 'c', 'e', 'a', 'g'], 13), (['d', 'c', 'e', 'a', 'f'], 12)]\n",
      "RSU for Negative Items: {'f': 11}\n",
      "Filtered Negative Items: []\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: f, Current Beta: ['d', 'c', 'e', 'a', 'b', 'f']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'e', 'a', 'b', 'f']\n",
      "database: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 16}]\n",
      "Database from Search: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 16}]\n",
      "Utility of Beta: 13\n",
      "Projected Database: []\n",
      "processing n [(['d', 'c', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'f'], 21), (['d', 'f'], 18), (['d', 'c', 'e', 'a', 'b'], 16), (['d', 'c', 'e', 'a'], 15), (['d', 'c', 'e', 'a', 'b', 'g'], 14), (['d', 'c', 'e', 'a', 'g'], 13), (['d', 'c', 'e', 'a', 'b', 'f'], 13)]\n",
      "RSU for Negative Items: {}\n",
      "Filtered Negative Items: []\n",
      "**************searchN********************\n",
      "out if\n",
      "projected_db: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 16}]\n",
      "RSU: {}\n",
      "RLU: {}\n",
      "Primary(β): []\n",
      "Secondary(β): []\n",
      "**************search********************\n",
      "\n",
      "Processing item: b, Current Beta: ['d', 'c', 'e', 'b']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'e', 'b']\n",
      "database: [{'tid': 6, 'items': ['a', 'b', 'g', 'f'], 'profits': [1, 1, -2, -1], 'quantities': [2, 1, 1, 3], 'u_project': 13}, {'tid': 3, 'items': ['b', 'f'], 'profits': [-1, -1], 'quantities': [2, 1], 'u_project': 15}]\n",
      "Utility of Beta: 27\n",
      "Projected Database: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 14}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 13}]\n",
      "processing [(['d', 'c', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'f'], 21), (['d', 'f'], 18), (['d', 'c', 'e', 'a', 'b'], 16), (['d', 'c', 'e', 'a'], 15), (['d', 'c', 'e', 'a', 'b', 'g'], 14), (['d', 'c', 'e', 'a', 'g'], 13)]\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: g, Current Beta: ['d', 'c', 'e', 'b', 'g']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'e', 'b', 'g']\n",
      "database: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 14}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 13}]\n",
      "Database from Search: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 14}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 13}]\n",
      "Utility of Beta: 12\n",
      "Projected Database: [{'tid': 6, 'items': ['f'], 'profits': [-1], 'quantities': [3], 'u_project': 12}]\n",
      "processing n [(['d', 'c', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'f'], 21), (['d', 'f'], 18), (['d', 'c', 'e', 'a', 'b'], 16), (['d', 'c', 'e', 'a'], 15), (['d', 'c', 'e', 'a', 'b', 'g'], 14), (['d', 'c', 'e', 'b', 'g'], 12)]\n",
      "RSU for Negative Items: {'f': 9}\n",
      "Filtered Negative Items: []\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: f, Current Beta: ['d', 'c', 'e', 'b', 'f']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'e', 'b', 'f']\n",
      "database: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 14}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 13}]\n",
      "Database from Search: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 14}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 13}]\n",
      "Utility of Beta: 23\n",
      "Projected Database: []\n",
      "processing n [(['d', 'c', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'e', 'b', 'f'], 23), (['d', 'c', 'f'], 21), (['d', 'f'], 18), (['d', 'c', 'e', 'a', 'b'], 16), (['d', 'c', 'e', 'a'], 15), (['d', 'c', 'e', 'a', 'b', 'g'], 14)]\n",
      "RSU for Negative Items: {}\n",
      "Filtered Negative Items: []\n",
      "**************searchN********************\n",
      "out if\n",
      "projected_db: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 14}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 13}]\n",
      "RSU: {}\n",
      "RLU: {}\n",
      "Primary(β): []\n",
      "Secondary(β): []\n",
      "**************search********************\n",
      "\n",
      "Processing item: a, Current Beta: ['d', 'c', 'a']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'a']\n",
      "database: [{'tid': 6, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, -2, -1], 'quantities': [1, 2, 1, 1, 3], 'u_project': 12}, {'tid': 3, 'items': ['e', 'b', 'f'], 'profits': [1, -1, -1], 'quantities': [2, 2, 1], 'u_project': 13}, {'tid': 4, 'items': ['e'], 'profits': [1], 'quantities': [3], 'u_project': 6}]\n",
      "Utility of Beta: 14\n",
      "Projected Database: [{'tid': 6, 'items': ['b', 'g', 'f'], 'profits': [1, -2, -1], 'quantities': [1, 1, 3], 'u_project': 14}]\n",
      "processing [(['d', 'c', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'e', 'b', 'f'], 23), (['d', 'c', 'f'], 21), (['d', 'f'], 18), (['d', 'c', 'e', 'a', 'b'], 16), (['d', 'c', 'e', 'a'], 15), (['d', 'c', 'a'], 14)]\n",
      "out if\n",
      "projected_db: [{'tid': 6, 'items': ['b', 'g', 'f'], 'profits': [1, -2, -1], 'quantities': [1, 1, 3], 'u_project': 14}]\n",
      "RSU: {'b': 15}\n",
      "RLU: {'b': 15}\n",
      "Primary(β): ['b']\n",
      "Secondary(β): ['b']\n",
      "**************search********************\n",
      "\n",
      "Processing item: b, Current Beta: ['d', 'c', 'a', 'b']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'a', 'b']\n",
      "database: [{'tid': 6, 'items': ['b', 'g', 'f'], 'profits': [1, -2, -1], 'quantities': [1, 1, 3], 'u_project': 14}]\n",
      "Utility of Beta: 15\n",
      "Projected Database: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 15}]\n",
      "processing [(['d', 'c', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'e', 'b', 'f'], 23), (['d', 'c', 'f'], 21), (['d', 'f'], 18), (['d', 'c', 'e', 'a', 'b'], 16), (['d', 'c', 'e', 'a'], 15), (['d', 'c', 'a', 'b'], 15)]\n",
      "out if\n",
      "projected_db: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 15}]\n",
      "RSU: {}\n",
      "RLU: {}\n",
      "Primary(β): []\n",
      "Secondary(β): []\n",
      "**************search********************\n",
      "\n",
      "Processing item: b, Current Beta: ['d', 'c', 'b']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'b']\n",
      "database: [{'tid': 6, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, -2, -1], 'quantities': [1, 2, 1, 1, 3], 'u_project': 12}, {'tid': 3, 'items': ['e', 'b', 'f'], 'profits': [1, -1, -1], 'quantities': [2, 2, 1], 'u_project': 13}, {'tid': 4, 'items': ['e'], 'profits': [1], 'quantities': [3], 'u_project': 6}]\n",
      "Utility of Beta: 24\n",
      "Projected Database: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 13}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 11}]\n",
      "processing [(['d', 'c', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'b'], 24), (['d', 'c', 'e', 'b', 'f'], 23), (['d', 'c', 'f'], 21), (['d', 'f'], 18), (['d', 'c', 'e', 'a', 'b'], 16), (['d', 'c', 'e', 'a'], 15)]\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: g, Current Beta: ['d', 'c', 'b', 'g']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'b', 'g']\n",
      "database: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 13}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 11}]\n",
      "Database from Search: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 13}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 11}]\n",
      "Utility of Beta: 11\n",
      "Projected Database: [{'tid': 6, 'items': ['f'], 'profits': [-1], 'quantities': [3], 'u_project': 11}]\n",
      "processing n [(['d', 'c', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'b'], 24), (['d', 'c', 'e', 'b', 'f'], 23), (['d', 'c', 'f'], 21), (['d', 'f'], 18), (['d', 'c', 'e', 'a', 'b'], 16), (['d', 'c', 'b', 'g'], 11)]\n",
      "RSU for Negative Items: {'f': 8}\n",
      "Filtered Negative Items: []\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: f, Current Beta: ['d', 'c', 'b', 'f']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'c', 'b', 'f']\n",
      "database: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 13}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 11}]\n",
      "Database from Search: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 13}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 11}]\n",
      "Utility of Beta: 20\n",
      "Projected Database: []\n",
      "processing n [(['d', 'c', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'b'], 24), (['d', 'c', 'e', 'b', 'f'], 23), (['d', 'c', 'f'], 21), (['d', 'c', 'b', 'f'], 20), (['d', 'f'], 18), (['d', 'c', 'e', 'a', 'b'], 16)]\n",
      "RSU for Negative Items: {}\n",
      "Filtered Negative Items: []\n",
      "**************searchN********************\n",
      "out if\n",
      "projected_db: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 13}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 11}]\n",
      "RSU: {}\n",
      "RLU: {}\n",
      "Primary(β): []\n",
      "Secondary(β): []\n",
      "**************search********************\n",
      "\n",
      "Processing item: e, Current Beta: ['d', 'e']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'e']\n",
      "database: [{'tid': 6, 'items': ['c', 'e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, 1, -2, -1], 'quantities': [4, 1, 2, 1, 1, 3], 'u_project': 8}, {'tid': 1, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, -2, 1, -2, -1], 'quantities': [3, 2, 2, 1, 2], 'u_project': 4}, {'tid': 3, 'items': ['c', 'e', 'b', 'f'], 'profits': [1, 1, -1, -1], 'quantities': [1, 2, 2, 1], 'u_project': 12}, {'tid': 4, 'items': ['c', 'e'], 'profits': [1, 1], 'quantities': [2, 3], 'u_project': 4}]\n",
      "Utility of Beta: 37\n",
      "Projected Database: [{'tid': 6, 'items': ['a', 'b', 'g', 'f'], 'profits': [1, 1, -2, -1], 'quantities': [2, 1, 1, 3], 'u_project': 9}, {'tid': 1, 'items': ['a', 'b', 'g', 'f'], 'profits': [-2, 1, -2, -1], 'quantities': [2, 2, 1, 2], 'u_project': 7}, {'tid': 3, 'items': ['b', 'f'], 'profits': [-1, -1], 'quantities': [2, 1], 'u_project': 14}]\n",
      "processing [(['d', 'c', 'e'], 37), (['d', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'b'], 24), (['d', 'c', 'e', 'b', 'f'], 23), (['d', 'c', 'f'], 21), (['d', 'c', 'b', 'f'], 20), (['d', 'f'], 18)]\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: g, Current Beta: ['d', 'e', 'g']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'e', 'g']\n",
      "database: [{'tid': 6, 'items': ['a', 'b', 'g', 'f'], 'profits': [1, 1, -2, -1], 'quantities': [2, 1, 1, 3], 'u_project': 9}, {'tid': 1, 'items': ['a', 'b', 'g', 'f'], 'profits': [-2, 1, -2, -1], 'quantities': [2, 2, 1, 2], 'u_project': 7}, {'tid': 3, 'items': ['b', 'f'], 'profits': [-1, -1], 'quantities': [2, 1], 'u_project': 14}]\n",
      "Database from Search: [{'tid': 6, 'items': ['a', 'b', 'g', 'f'], 'profits': [1, 1, -2, -1], 'quantities': [2, 1, 1, 3], 'u_project': 9}, {'tid': 1, 'items': ['a', 'b', 'g', 'f'], 'profits': [-2, 1, -2, -1], 'quantities': [2, 2, 1, 2], 'u_project': 7}, {'tid': 3, 'items': ['b', 'f'], 'profits': [-1, -1], 'quantities': [2, 1], 'u_project': 14}]\n",
      "Utility of Beta: 12\n",
      "Projected Database: [{'tid': 6, 'items': ['f'], 'profits': [-1], 'quantities': [3], 'u_project': 7}, {'tid': 1, 'items': ['f'], 'profits': [-1], 'quantities': [2], 'u_project': 5}]\n",
      "processing n [(['d', 'c', 'e'], 37), (['d', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'b'], 24), (['d', 'c', 'e', 'b', 'f'], 23), (['d', 'c', 'f'], 21), (['d', 'c', 'b', 'f'], 20), (['d', 'e', 'g'], 12)]\n",
      "RSU for Negative Items: {'f': 7}\n",
      "Filtered Negative Items: []\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: f, Current Beta: ['d', 'e', 'f']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'e', 'f']\n",
      "database: [{'tid': 6, 'items': ['a', 'b', 'g', 'f'], 'profits': [1, 1, -2, -1], 'quantities': [2, 1, 1, 3], 'u_project': 9}, {'tid': 1, 'items': ['a', 'b', 'g', 'f'], 'profits': [-2, 1, -2, -1], 'quantities': [2, 2, 1, 2], 'u_project': 7}, {'tid': 3, 'items': ['b', 'f'], 'profits': [-1, -1], 'quantities': [2, 1], 'u_project': 14}]\n",
      "Database from Search: [{'tid': 6, 'items': ['a', 'b', 'g', 'f'], 'profits': [1, 1, -2, -1], 'quantities': [2, 1, 1, 3], 'u_project': 9}, {'tid': 1, 'items': ['a', 'b', 'g', 'f'], 'profits': [-2, 1, -2, -1], 'quantities': [2, 2, 1, 2], 'u_project': 7}, {'tid': 3, 'items': ['b', 'f'], 'profits': [-1, -1], 'quantities': [2, 1], 'u_project': 14}]\n",
      "Utility of Beta: 24\n",
      "Projected Database: []\n",
      "processing n [(['d', 'c', 'e'], 37), (['d', 'e'], 37), (['d', 'c'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'b'], 24), (['d', 'e', 'f'], 24), (['d', 'c', 'e', 'b', 'f'], 23), (['d', 'c', 'f'], 21), (['d', 'c', 'b', 'f'], 20)]\n",
      "RSU for Negative Items: {}\n",
      "Filtered Negative Items: []\n",
      "**************searchN********************\n",
      "out if\n",
      "projected_db: [{'tid': 6, 'items': ['a', 'b', 'g', 'f'], 'profits': [1, 1, -2, -1], 'quantities': [2, 1, 1, 3], 'u_project': 9}, {'tid': 1, 'items': ['a', 'b', 'g', 'f'], 'profits': [-2, 1, -2, -1], 'quantities': [2, 2, 1, 2], 'u_project': 7}, {'tid': 3, 'items': ['b', 'f'], 'profits': [-1, -1], 'quantities': [2, 1], 'u_project': 14}]\n",
      "RSU: {'a': 17, 'b': 31}\n",
      "RLU: {'a': 21, 'b': 35}\n",
      "Primary(β): ['b']\n",
      "Secondary(β): ['a', 'b']\n",
      "**************search********************\n",
      "\n",
      "Processing item: b, Current Beta: ['d', 'e', 'b']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'e', 'b']\n",
      "database: [{'tid': 6, 'items': ['a', 'b', 'g', 'f'], 'profits': [1, 1, -2, -1], 'quantities': [2, 1, 1, 3], 'u_project': 9}, {'tid': 1, 'items': ['a', 'b', 'g', 'f'], 'profits': [-2, 1, -2, -1], 'quantities': [2, 2, 1, 2], 'u_project': 7}, {'tid': 3, 'items': ['b', 'f'], 'profits': [-1, -1], 'quantities': [2, 1], 'u_project': 14}]\n",
      "Utility of Beta: 31\n",
      "Projected Database: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 10}, {'tid': 1, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 2], 'u_project': 9}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 12}]\n",
      "processing [(['d', 'c', 'e'], 37), (['d', 'e'], 37), (['d', 'c'], 31), (['d', 'e', 'b'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'b'], 24), (['d', 'e', 'f'], 24), (['d', 'c', 'e', 'b', 'f'], 23), (['d', 'c', 'f'], 21)]\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: g, Current Beta: ['d', 'e', 'b', 'g']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'e', 'b', 'g']\n",
      "database: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 10}, {'tid': 1, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 2], 'u_project': 9}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 12}]\n",
      "Database from Search: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 10}, {'tid': 1, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 2], 'u_project': 9}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 12}]\n",
      "Utility of Beta: 15\n",
      "Projected Database: [{'tid': 6, 'items': ['f'], 'profits': [-1], 'quantities': [3], 'u_project': 8}, {'tid': 1, 'items': ['f'], 'profits': [-1], 'quantities': [2], 'u_project': 7}]\n",
      "processing n [(['d', 'c', 'e'], 37), (['d', 'e'], 37), (['d', 'c'], 31), (['d', 'e', 'b'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'b'], 24), (['d', 'e', 'f'], 24), (['d', 'c', 'e', 'b', 'f'], 23), (['d', 'e', 'b', 'g'], 15)]\n",
      "RSU for Negative Items: {'f': 10}\n",
      "Filtered Negative Items: []\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: f, Current Beta: ['d', 'e', 'b', 'f']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'e', 'b', 'f']\n",
      "database: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 10}, {'tid': 1, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 2], 'u_project': 9}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 12}]\n",
      "Database from Search: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 10}, {'tid': 1, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 2], 'u_project': 9}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 12}]\n",
      "Utility of Beta: 25\n",
      "Projected Database: []\n",
      "processing n [(['d', 'c', 'e'], 37), (['d', 'e'], 37), (['d', 'c'], 31), (['d', 'e', 'b'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'e', 'b', 'f'], 25), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'b'], 24), (['d', 'e', 'f'], 24), (['d', 'c', 'e', 'b', 'f'], 23)]\n",
      "RSU for Negative Items: {}\n",
      "Filtered Negative Items: []\n",
      "**************searchN********************\n",
      "out if\n",
      "projected_db: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 10}, {'tid': 1, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 2], 'u_project': 9}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 12}]\n",
      "RSU: {'b': 0}\n",
      "RLU: {'b': 0}\n",
      "Primary(β): []\n",
      "Secondary(β): []\n",
      "**************search********************\n",
      "\n",
      "Processing item: a, Current Beta: ['d', 'a']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'a']\n",
      "database: [{'tid': 6, 'items': ['c', 'e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, 1, -2, -1], 'quantities': [4, 1, 2, 1, 1, 3], 'u_project': 8}, {'tid': 1, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, -2, 1, -2, -1], 'quantities': [3, 2, 2, 1, 2], 'u_project': 4}, {'tid': 3, 'items': ['c', 'e', 'b', 'f'], 'profits': [1, 1, -1, -1], 'quantities': [1, 2, 2, 1], 'u_project': 12}, {'tid': 4, 'items': ['c', 'e'], 'profits': [1, 1], 'quantities': [2, 3], 'u_project': 4}]\n",
      "Utility of Beta: 10\n",
      "Projected Database: [{'tid': 6, 'items': ['b', 'g', 'f'], 'profits': [1, -2, -1], 'quantities': [1, 1, 3], 'u_project': 10}, {'tid': 1, 'items': ['b', 'g', 'f'], 'profits': [1, -2, -1], 'quantities': [2, 1, 2], 'u_project': 0}]\n",
      "processing [(['d', 'c', 'e'], 37), (['d', 'e'], 37), (['d', 'c'], 31), (['d', 'e', 'b'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'e', 'b', 'f'], 25), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'b'], 24), (['d', 'e', 'f'], 24), (['d', 'a'], 10)]\n",
      "out if\n",
      "projected_db: [{'tid': 6, 'items': ['b', 'g', 'f'], 'profits': [1, -2, -1], 'quantities': [1, 1, 3], 'u_project': 10}, {'tid': 1, 'items': ['b', 'g', 'f'], 'profits': [1, -2, -1], 'quantities': [2, 1, 2], 'u_project': 0}]\n",
      "RSU: {'b': 13}\n",
      "RLU: {'b': 13}\n",
      "Primary(β): []\n",
      "Secondary(β): []\n",
      "**************search********************\n",
      "\n",
      "Processing item: b, Current Beta: ['d', 'b']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'b']\n",
      "database: [{'tid': 6, 'items': ['c', 'e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, 1, -2, -1], 'quantities': [4, 1, 2, 1, 1, 3], 'u_project': 8}, {'tid': 1, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, -2, 1, -2, -1], 'quantities': [3, 2, 2, 1, 2], 'u_project': 4}, {'tid': 3, 'items': ['c', 'e', 'b', 'f'], 'profits': [1, 1, -1, -1], 'quantities': [1, 2, 2, 1], 'u_project': 12}, {'tid': 4, 'items': ['c', 'e'], 'profits': [1, 1], 'quantities': [2, 3], 'u_project': 4}]\n",
      "Utility of Beta: 25\n",
      "Projected Database: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 9}, {'tid': 1, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 2], 'u_project': 6}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 10}]\n",
      "processing [(['d', 'c', 'e'], 37), (['d', 'e'], 37), (['d', 'c'], 31), (['d', 'e', 'b'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'e', 'b', 'f'], 25), (['d', 'b'], 25), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'b'], 24), (['d', 'e', 'f'], 24)]\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: g, Current Beta: ['d', 'b', 'g']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'b', 'g']\n",
      "database: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 9}, {'tid': 1, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 2], 'u_project': 6}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 10}]\n",
      "Database from Search: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 9}, {'tid': 1, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 2], 'u_project': 6}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 10}]\n",
      "Utility of Beta: 11\n",
      "Projected Database: [{'tid': 6, 'items': ['f'], 'profits': [-1], 'quantities': [3], 'u_project': 7}, {'tid': 1, 'items': ['f'], 'profits': [-1], 'quantities': [2], 'u_project': 4}]\n",
      "processing n [(['d', 'c', 'e'], 37), (['d', 'e'], 37), (['d', 'c'], 31), (['d', 'e', 'b'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'e', 'b', 'f'], 25), (['d', 'b'], 25), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'b'], 24), (['d', 'b', 'g'], 11)]\n",
      "RSU for Negative Items: {'f': 6}\n",
      "Filtered Negative Items: []\n",
      "**************searchN********************\n",
      "\n",
      "Processing item: f, Current Beta: ['d', 'b', 'f']\n",
      "***************projecting database***********\n",
      "itemset: ['d', 'b', 'f']\n",
      "database: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 9}, {'tid': 1, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 2], 'u_project': 6}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 10}]\n",
      "Database from Search: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 9}, {'tid': 1, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 2], 'u_project': 6}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 10}]\n",
      "Utility of Beta: 19\n",
      "Projected Database: []\n",
      "processing n [(['d', 'c', 'e'], 37), (['d', 'e'], 37), (['d', 'c'], 31), (['d', 'e', 'b'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'e', 'b', 'f'], 25), (['d', 'b'], 25), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'b'], 24), (['d', 'b', 'f'], 19)]\n",
      "RSU for Negative Items: {}\n",
      "Filtered Negative Items: []\n",
      "**************searchN********************\n",
      "out if\n",
      "projected_db: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 9}, {'tid': 1, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 2], 'u_project': 6}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': 10}]\n",
      "RSU: {}\n",
      "RLU: {}\n",
      "Primary(β): []\n",
      "Secondary(β): []\n",
      "**************search********************\n",
      "\n",
      "Processing item: c, Current Beta: ['c']\n",
      "***************projecting database***********\n",
      "itemset: ['c']\n",
      "database: [{'tid': 6, 'items': ['d', 'c', 'e', 'a', 'b', 'g', 'f'], 'quantities': [2, 4, 1, 2, 1, 1, 3], 'profits': [4, 1, 1, 1, 1, -2, -1]}, {'tid': 1, 'items': ['d', 'e', 'a', 'b', 'g', 'f'], 'quantities': [1, 3, 2, 2, 1, 2], 'profits': [4, 1, -2, 1, -2, -1]}, {'tid': 3, 'items': ['d', 'c', 'e', 'b', 'f'], 'quantities': [3, 1, 2, 2, 1], 'profits': [4, 1, 1, -1, -1]}, {'tid': 5, 'items': ['a', 'f'], 'quantities': [2, 3], 'profits': [2, -1]}, {'tid': 7, 'items': ['c', 'e', 'b'], 'quantities': [2, 2, 3], 'profits': [2, 2, 1]}, {'tid': 2, 'items': ['c', 'b'], 'quantities': [5, 1], 'profits': [1, -1]}, {'tid': 4, 'items': ['d', 'c', 'e'], 'quantities': [1, 2, 3], 'profits': [4, 1, 1]}]\n",
      "Utility of Beta: 16\n",
      "Projected Database: [{'tid': 6, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, -2, -1], 'quantities': [1, 2, 1, 1, 3], 'u_project': 4}, {'tid': 3, 'items': ['e', 'b', 'f'], 'profits': [1, -1, -1], 'quantities': [2, 2, 1], 'u_project': 1}, {'tid': 7, 'items': ['e', 'b'], 'profits': [2, 1], 'quantities': [2, 3], 'u_project': 4}, {'tid': 2, 'items': ['b'], 'profits': [-1], 'quantities': [1], 'u_project': 5}, {'tid': 4, 'items': ['e'], 'profits': [1], 'quantities': [3], 'u_project': 2}]\n",
      "processing [(['d', 'c', 'e'], 37), (['d', 'e'], 37), (['d', 'c'], 31), (['d', 'e', 'b'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'e', 'b', 'f'], 25), (['d', 'b'], 25), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'b'], 24), (['c'], 16)]\n",
      "out if\n",
      "projected_db: [{'tid': 6, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, -2, -1], 'quantities': [1, 2, 1, 1, 3], 'u_project': 4}, {'tid': 3, 'items': ['e', 'b', 'f'], 'profits': [1, -1, -1], 'quantities': [2, 2, 1], 'u_project': 1}, {'tid': 7, 'items': ['e', 'b'], 'profits': [2, 1], 'quantities': [2, 3], 'u_project': 4}, {'tid': 2, 'items': ['b'], 'profits': [-1], 'quantities': [1], 'u_project': 5}, {'tid': 4, 'items': ['e'], 'profits': [1], 'quantities': [3], 'u_project': 2}]\n",
      "RSU: {'e': 27, 'a': 7, 'b': 15}\n",
      "RLU: {'e': 27, 'a': 8, 'b': 27}\n",
      "Primary(β): ['e']\n",
      "Secondary(β): ['e', 'b']\n",
      "**************search********************\n",
      "\n",
      "Processing item: e, Current Beta: ['c', 'e']\n",
      "***************projecting database***********\n",
      "itemset: ['c', 'e']\n",
      "database: [{'tid': 6, 'items': ['e', 'a', 'b', 'g', 'f'], 'profits': [1, 1, 1, -2, -1], 'quantities': [1, 2, 1, 1, 3], 'u_project': 4}, {'tid': 3, 'items': ['e', 'b', 'f'], 'profits': [1, -1, -1], 'quantities': [2, 2, 1], 'u_project': 1}, {'tid': 7, 'items': ['e', 'b'], 'profits': [2, 1], 'quantities': [2, 3], 'u_project': 4}, {'tid': 2, 'items': ['b'], 'profits': [-1], 'quantities': [1], 'u_project': 5}, {'tid': 4, 'items': ['e'], 'profits': [1], 'quantities': [3], 'u_project': 2}]\n",
      "Utility of Beta: 21\n",
      "Projected Database: [{'tid': 6, 'items': ['a', 'b', 'g', 'f'], 'profits': [1, 1, -2, -1], 'quantities': [2, 1, 1, 3], 'u_project': 5}, {'tid': 3, 'items': ['b', 'f'], 'profits': [-1, -1], 'quantities': [2, 1], 'u_project': 3}, {'tid': 7, 'items': ['b'], 'profits': [1], 'quantities': [3], 'u_project': 8}]\n",
      "processing [(['d', 'c', 'e'], 37), (['d', 'e'], 37), (['d', 'c'], 31), (['d', 'e', 'b'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'e', 'b', 'f'], 25), (['d', 'b'], 25), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'b'], 24), (['c', 'e'], 21)]\n",
      "out if\n",
      "projected_db: [{'tid': 6, 'items': ['a', 'b', 'g', 'f'], 'profits': [1, 1, -2, -1], 'quantities': [2, 1, 1, 3], 'u_project': 5}, {'tid': 3, 'items': ['b', 'f'], 'profits': [-1, -1], 'quantities': [2, 1], 'u_project': 3}, {'tid': 7, 'items': ['b'], 'profits': [1], 'quantities': [3], 'u_project': 8}]\n",
      "RSU: {'b': 18}\n",
      "RLU: {'b': 22}\n",
      "Primary(β): []\n",
      "Secondary(β): []\n",
      "**************search********************\n",
      "\n",
      "Processing item: e, Current Beta: ['e']\n",
      "***************projecting database***********\n",
      "itemset: ['e']\n",
      "database: [{'tid': 6, 'items': ['d', 'c', 'e', 'a', 'b', 'g', 'f'], 'quantities': [2, 4, 1, 2, 1, 1, 3], 'profits': [4, 1, 1, 1, 1, -2, -1]}, {'tid': 1, 'items': ['d', 'e', 'a', 'b', 'g', 'f'], 'quantities': [1, 3, 2, 2, 1, 2], 'profits': [4, 1, -2, 1, -2, -1]}, {'tid': 3, 'items': ['d', 'c', 'e', 'b', 'f'], 'quantities': [3, 1, 2, 2, 1], 'profits': [4, 1, 1, -1, -1]}, {'tid': 5, 'items': ['a', 'f'], 'quantities': [2, 3], 'profits': [2, -1]}, {'tid': 7, 'items': ['c', 'e', 'b'], 'quantities': [2, 2, 3], 'profits': [2, 2, 1]}, {'tid': 2, 'items': ['c', 'b'], 'quantities': [5, 1], 'profits': [1, -1]}, {'tid': 4, 'items': ['d', 'c', 'e'], 'quantities': [1, 2, 3], 'profits': [4, 1, 1]}]\n",
      "Utility of Beta: 13\n",
      "Projected Database: [{'tid': 6, 'items': ['a', 'b', 'g', 'f'], 'profits': [1, 1, -2, -1], 'quantities': [2, 1, 1, 3], 'u_project': 1}, {'tid': 1, 'items': ['a', 'b', 'g', 'f'], 'profits': [-2, 1, -2, -1], 'quantities': [2, 2, 1, 2], 'u_project': 3}, {'tid': 3, 'items': ['b', 'f'], 'profits': [-1, -1], 'quantities': [2, 1], 'u_project': 2}, {'tid': 7, 'items': ['b'], 'profits': [1], 'quantities': [3], 'u_project': 4}]\n",
      "processing [(['d', 'c', 'e'], 37), (['d', 'e'], 37), (['d', 'c'], 31), (['d', 'e', 'b'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'e', 'b', 'f'], 25), (['d', 'b'], 25), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'b'], 24), (['e'], 13)]\n",
      "out if\n",
      "projected_db: [{'tid': 6, 'items': ['a', 'b', 'g', 'f'], 'profits': [1, 1, -2, -1], 'quantities': [2, 1, 1, 3], 'u_project': 1}, {'tid': 1, 'items': ['a', 'b', 'g', 'f'], 'profits': [-2, 1, -2, -1], 'quantities': [2, 2, 1, 2], 'u_project': 3}, {'tid': 3, 'items': ['b', 'f'], 'profits': [-1, -1], 'quantities': [2, 1], 'u_project': 2}, {'tid': 7, 'items': ['b'], 'profits': [1], 'quantities': [3], 'u_project': 4}]\n",
      "RSU: {'a': 5, 'b': 14}\n",
      "RLU: {'a': 9, 'b': 18}\n",
      "Primary(β): []\n",
      "Secondary(β): []\n",
      "**************search********************\n",
      "\n",
      "Processing item: a, Current Beta: ['a']\n",
      "***************projecting database***********\n",
      "itemset: ['a']\n",
      "database: [{'tid': 6, 'items': ['d', 'c', 'e', 'a', 'b', 'g', 'f'], 'quantities': [2, 4, 1, 2, 1, 1, 3], 'profits': [4, 1, 1, 1, 1, -2, -1]}, {'tid': 1, 'items': ['d', 'e', 'a', 'b', 'g', 'f'], 'quantities': [1, 3, 2, 2, 1, 2], 'profits': [4, 1, -2, 1, -2, -1]}, {'tid': 3, 'items': ['d', 'c', 'e', 'b', 'f'], 'quantities': [3, 1, 2, 2, 1], 'profits': [4, 1, 1, -1, -1]}, {'tid': 5, 'items': ['a', 'f'], 'quantities': [2, 3], 'profits': [2, -1]}, {'tid': 7, 'items': ['c', 'e', 'b'], 'quantities': [2, 2, 3], 'profits': [2, 2, 1]}, {'tid': 2, 'items': ['c', 'b'], 'quantities': [5, 1], 'profits': [1, -1]}, {'tid': 4, 'items': ['d', 'c', 'e'], 'quantities': [1, 2, 3], 'profits': [4, 1, 1]}]\n",
      "Utility of Beta: 2\n",
      "Projected Database: [{'tid': 6, 'items': ['b', 'g', 'f'], 'profits': [1, -2, -1], 'quantities': [1, 1, 3], 'u_project': 2}, {'tid': 1, 'items': ['b', 'g', 'f'], 'profits': [1, -2, -1], 'quantities': [2, 1, 2], 'u_project': -4}, {'tid': 5, 'items': ['f'], 'profits': [-1], 'quantities': [3], 'u_project': 4}]\n",
      "processing [(['d', 'c', 'e'], 37), (['d', 'e'], 37), (['d', 'c'], 31), (['d', 'e', 'b'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'e', 'b', 'f'], 25), (['d', 'b'], 25), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'b'], 24), (['a'], 2)]\n",
      "out if\n",
      "projected_db: [{'tid': 6, 'items': ['b', 'g', 'f'], 'profits': [1, -2, -1], 'quantities': [1, 1, 3], 'u_project': 2}, {'tid': 1, 'items': ['b', 'g', 'f'], 'profits': [1, -2, -1], 'quantities': [2, 1, 2], 'u_project': -4}, {'tid': 5, 'items': ['f'], 'profits': [-1], 'quantities': [3], 'u_project': 4}]\n",
      "RSU: {'b': 1}\n",
      "RLU: {'b': 1}\n",
      "Primary(β): []\n",
      "Secondary(β): []\n",
      "**************search********************\n",
      "\n",
      "Processing item: b, Current Beta: ['b']\n",
      "***************projecting database***********\n",
      "itemset: ['b']\n",
      "database: [{'tid': 6, 'items': ['d', 'c', 'e', 'a', 'b', 'g', 'f'], 'quantities': [2, 4, 1, 2, 1, 1, 3], 'profits': [4, 1, 1, 1, 1, -2, -1]}, {'tid': 1, 'items': ['d', 'e', 'a', 'b', 'g', 'f'], 'quantities': [1, 3, 2, 2, 1, 2], 'profits': [4, 1, -2, 1, -2, -1]}, {'tid': 3, 'items': ['d', 'c', 'e', 'b', 'f'], 'quantities': [3, 1, 2, 2, 1], 'profits': [4, 1, 1, -1, -1]}, {'tid': 5, 'items': ['a', 'f'], 'quantities': [2, 3], 'profits': [2, -1]}, {'tid': 7, 'items': ['c', 'e', 'b'], 'quantities': [2, 2, 3], 'profits': [2, 2, 1]}, {'tid': 2, 'items': ['c', 'b'], 'quantities': [5, 1], 'profits': [1, -1]}, {'tid': 4, 'items': ['d', 'c', 'e'], 'quantities': [1, 2, 3], 'profits': [4, 1, 1]}]\n",
      "Utility of Beta: 3\n",
      "Projected Database: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 1}, {'tid': 1, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 2], 'u_project': 2}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': -2}]\n",
      "processing [(['d', 'c', 'e'], 37), (['d', 'e'], 37), (['d', 'c'], 31), (['d', 'e', 'b'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'e', 'b', 'f'], 25), (['d', 'b'], 25), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'b'], 24), (['b'], 3)]\n",
      "out if\n",
      "projected_db: [{'tid': 6, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 3], 'u_project': 1}, {'tid': 1, 'items': ['g', 'f'], 'profits': [-2, -1], 'quantities': [1, 2], 'u_project': 2}, {'tid': 3, 'items': ['f'], 'profits': [-1], 'quantities': [1], 'u_project': -2}]\n",
      "RSU: {}\n",
      "RLU: {}\n",
      "Primary(β): []\n",
      "Secondary(β): []\n",
      "**************search********************\n"
     ]
    }
   ],
   "source": [
    "def calculate_utility(itemset, database):\n",
    "    utility = 0\n",
    "    for transaction in database:\n",
    "        if all(item in transaction['items'] for item in itemset):\n",
    "            indices = [transaction['items'].index(item) for item in itemset if item in transaction['items']]\n",
    "            quantities = transaction.get('quantities', [1] * len(transaction['items']))\n",
    "            utility += sum(transaction['profits'][index] * quantities[index] for index in indices)\n",
    "    return utility\n",
    "\n",
    "\n",
    "def project_database(itemset, database):\n",
    "    print(f\"***************projecting database***********\")\n",
    "    print(f\"itemset: {itemset}\")\n",
    "    print(f\"database: {database}\")\n",
    "    projected_db = []\n",
    "    u_beta = 0\n",
    "    for transaction in database:\n",
    "        if itemset[-1] in transaction['items']: # all(item in transaction['items'] for item in itemset):\n",
    "            last_index = transaction['items'].index(itemset[-1]) \n",
    "            # Project items, profits, and quantities starting from the last index + 1\n",
    "            projected_items = transaction['items'][last_index + 1:]\n",
    "            projected_profits = transaction['profits'][last_index + 1:]\n",
    "\n",
    "            projected_quantities = (\n",
    "                transaction.get('quantities', [1] * len(transaction['items']))[last_index + 1:]\n",
    "            )\n",
    "\n",
    "            tid = transaction['tid']\n",
    "            u_project = transaction['quantities'][last_index]*transaction['profits'][last_index]  + transaction.get(\"u_project\", 00)\n",
    "            u_beta += u_project\n",
    "            if projected_items:\n",
    "                projected_db.append({\n",
    "                    'tid': tid,\n",
    "                    'items': projected_items,\n",
    "                    'profits': projected_profits,\n",
    "                    'quantities': projected_quantities,\n",
    "                    'u_project': u_project\n",
    "                })\n",
    "                \n",
    "    return projected_db, u_beta\n",
    "\n",
    "def calculate_RLU(database, itemset):\n",
    "    RLU = {item: 0 for item in itemset}\n",
    "\n",
    "    for transaction in database:\n",
    "        for index, item in enumerate(transaction['items']):\n",
    "            if item in itemset:\n",
    "                RLU[item] += transaction.get(\"u_project\", 00) \n",
    "                RLU[item] += sum(transaction['profits'][index] * transaction['quantities'][index] for index in range(len(transaction['profits'])) if transaction['profits'][index] > 0)\n",
    "\n",
    "        #         # Calculate the utility of the specific item\n",
    "        #         quantities = transaction.get('quantities', [1] * len(transaction['items']))\n",
    "        #         u_item = transaction['profits'][index] * quantities[index]\n",
    "        #         RLU[item] += sum(transaction['profits'][index] * quantities[index] for index in indices)\n",
    "        #         # Add to RLU: utility of the specific item\n",
    "        #         RLU[item] += transaction.get(\"u_project\", 00) \n",
    "    return RLU\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "def search(eta, X, database, primary_items, secondary_items, minU, processing_top_k_pattern):\n",
    "    print(\"**************search********************\")\n",
    "    for iter, i in enumerate(primary_items):\n",
    "        beta = X + [i]\n",
    "        print(f\"\\nProcessing item: {i}, Current Beta: {beta}\")\n",
    "\n",
    "        #u_beta = calculate_utility(beta, database)\n",
    "        projected_db, u_beta = project_database(beta, database)\n",
    "        \n",
    "        print(f\"Utility of Beta: {u_beta}\")\n",
    "        print(f\"Projected Database: {projected_db}\")\n",
    "\n",
    "        index = 0\n",
    "        while index < len(processing_top_k_pattern):\n",
    "            if u_beta > processing_top_k_pattern[index][1]:\n",
    "                break\n",
    "            index += 1\n",
    "\n",
    "        processing_top_k_pattern.insert(index, (beta, u_beta))\n",
    "        print(\"processing\",processing_top_k_pattern)\n",
    "        if len(processing_top_k_pattern) > K:\n",
    "            processing_top_k_pattern = processing_top_k_pattern[:K]\n",
    "            minU = processing_top_k_pattern[-1][1]\n",
    "        # if u_beta >= minU:\n",
    "\n",
    "        #     print(f\"High Utility Itemset Found: {beta} with Utility {u_beta}\")\n",
    "\n",
    "        if u_beta > minU:\n",
    "            processing_top_k_pattern = searchN(eta, beta, projected_db, minU, processing_top_k_pattern)\n",
    "\n",
    "        print(\"out if\")\n",
    "        print(f\"projected_db: {projected_db}\")\n",
    "        rsu = calculate_RSU(projected_db, secondary_items[iter + 1:])\n",
    "        rlu = calculate_RLU(projected_db, secondary_items[iter + 1:])\n",
    "        \n",
    "        print(f\"RSU: {rsu}\\nRLU: {rlu}\")\n",
    "\n",
    "        primary_beta = [z for z in secondary_items[iter + 1:] if rsu[z] >= minU]\n",
    "        secondary_beta = [z for z in secondary_items[iter + 1:] if rlu[z] >= minU]\n",
    "\n",
    "        print(f\"Primary(β): {primary_beta}\")\n",
    "        print(f\"Secondary(β): {secondary_beta}\")\n",
    "\n",
    "        processing_top_k_pattern = search(eta, beta, projected_db, primary_beta, secondary_beta, minU, processing_top_k_pattern)\n",
    "\n",
    "    if len(processing_top_k_pattern) > K:\n",
    "            processing_top_k_pattern = processing_top_k_pattern[:K]\n",
    "    return processing_top_k_pattern\n",
    "\n",
    "\n",
    "def searchN(eta, X, database, minU, n_processing_top_k_pattern):\n",
    "    print(\"**************searchN********************\")\n",
    "    for iter, i in enumerate(eta):\n",
    "        beta = X + [i]\n",
    "        print(f\"\\nProcessing item: {i}, Current Beta: {beta}\")\n",
    "\n",
    "        projected_db, u_beta = project_database(beta, database)\n",
    "        #u_beta = calculate_utility(beta, final_sorted_database)\n",
    "\n",
    "        print(f\"Database from Search: {database}\")\n",
    "        print(f\"Utility of Beta: {u_beta}\")\n",
    "        print(f\"Projected Database: {projected_db}\")\n",
    "\n",
    "        # if u_beta >= minU:\n",
    "        #     print(f\"High Utility Itemset Found: {beta} with Utility {u_beta}\")\n",
    "        index = 0\n",
    "        while index < len(n_processing_top_k_pattern):\n",
    "            if u_beta > n_processing_top_k_pattern[index][1]:\n",
    "                break\n",
    "            index += 1\n",
    "        n_processing_top_k_pattern.insert(index, (beta, u_beta))\n",
    "        print(\"processing n\",n_processing_top_k_pattern)\n",
    "\n",
    "        if len(n_processing_top_k_pattern) > K:\n",
    "            n_processing_top_k_pattern = n_processing_top_k_pattern[:K]\n",
    "            minU = n_processing_top_k_pattern[-1][1]\n",
    "        rsu = calculate_RSU(projected_db, eta[iter + 1:])\n",
    "        print(f\"RSU for Negative Items: {rsu}\")\n",
    "\n",
    "        primary_beta = [z for z in eta[iter + 1:] if rsu.get(z, 0) >= minU]\n",
    "        print(f\"Filtered Negative Items: {primary_beta}\")\n",
    "\n",
    "        n_processing_top_k_pattern = searchN(primary_beta, beta, projected_db, minU, n_processing_top_k_pattern)\n",
    "    return n_processing_top_k_pattern\n",
    "\n",
    "\n",
    "final_top_k_pattern = search(sorted_negative_items, [], final_sorted_database, Primary, sorted_secondary, minU, top_k_pattern)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10 10\n",
      "[(['d', 'c', 'e'], 37), (['d', 'e'], 37), (['d', 'c'], 31), (['d', 'e', 'b'], 31), (['d'], 28), (['d', 'c', 'e', 'b'], 27), (['d', 'e', 'b', 'f'], 25), (['d', 'b'], 25), (['d', 'c', 'e', 'f'], 24), (['d', 'c', 'b'], 24)]\n"
     ]
    }
   ],
   "source": [
    "print(K, len(final_top_k_pattern))\n",
    "print(final_top_k_pattern)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "recommend_sys",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
